Entendo que você ainda esteja confuso com o CSS. É normal, especialmente com conceitos como 
pseudo-elementos e animações. Vamos tentar clarear um pouco mais, focando no código 
ativo (sem os comentários):

.barraCarregamento {
    width: 400px;
    height: 100px;
    border-style: solid;
    position: relative;
    overflow: hidden;
}

.barraCarregamento::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background-color: black;
    animation: carregar 6s linear forwards;
}

@keyframes carregar {
    to { width: 100%; }
}

body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}


Imagine duas camadas:

A camada de baixo é a sua div com a classe barraCarregamento. Ela define o espaço total da barra, com 400px de largura e 100px de altura. A borda dá a ela um contorno visual. Importante: position: relative a torna a referência para o posicionamento da camada de cima e overflow: hidden esconde tudo que ultrapassa os limites dessa camada.

A camada de cima é o pseudo-elemento ::before. Pense nele como uma "sub-div" invisível dentro da barraCarregamento. Inicialmente, ele tem width: 0, ou seja, não tem largura nenhuma. A mágica acontece com a animação.

A animação carregar:

Essa animação faz apenas uma coisa: muda a largura do pseudo-elemento ::before de 0% para 100% em 6 segundos (6s). Como a cor de fundo do ::before é preta, você vê uma barra preta crescendo da esquerda para a direita dentro da barraCarregamento.

Passo a passo da animação:

Início: O ::before tem largura zero, então você só vê a borda da barraCarregamento.
Durante a animação: A largura do ::before aumenta gradualmente, fazendo a barra preta crescer. O overflow: hidden da barraCarregamento esconde a parte do ::before que ultrapassa os 400px.
Final: O ::before atinge 100% de largura (400px), preenchendo todo o espaço da barraCarregamento. A propriedade forwards garante que a barra permaneça preenchida após os 6 segundos.
Centralizando na tela:

O código do body centraliza a barraCarregamento na tela, tanto horizontalmente quanto verticalmente.

Em resumo: Você cria uma "caixa" (.barraCarregamento) e uma "barra preta" dentro dela (::before). A animação expande a barra preta, criando o efeito de carregamento.

Se ainda tiver dúvidas, tente isolar partes do código e veja o que acontece. Por exemplo, remova o overflow: hidden e veja o que muda. Experimentar é uma ótima forma de aprender!




--=================================================

Vamos analisar o código passo a passo:

1. Estilizando o elemento .barraCarregamento:
.barraCarregamento {
    width: 400px;
    height: 100px;
    border-style: solid;
    position: relative; /* Necessário para posicionar o pseudo-elemento */
    overflow: hidden; /* Esconde o excesso do pseudo-elemento */
}
width: 400px; e height: 100px;: Define a largura e altura da barra de carregamento.
border-style: solid;: Adiciona uma borda sólida ao redor da barra. A cor e espessura da borda serão as padrão do navegador, a menos que você as defina explicitamente.
position: relative;: Torna o elemento um ponto de referência para o posicionamento absoluto do seu pseudo-elemento ::before. O pseudo-elemento será posicionado em relação a este elemento.
overflow: hidden;: Esconde qualquer conteúdo que ultrapasse os limites da barra. Isso é crucial para o efeito de carregamento, pois o pseudo-elemento se expande além da largura inicial de 0.


2. Criando e animando o pseudo-elemento .barraCarregamento::before:
.barraCarregamento::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background-color: black; /* Cor da barra de carregamento */
    animation: carregar 6s linear forwards;
}

content: '';: É obrigatório para criar um pseudo-elemento. Apesar de vazio, ele cria um elemento "virtual" antes do conteúdo da .barraCarregamento.
position: absolute;: Posiciona o pseudo-elemento absolutamente em relação ao seu pai (.barraCarregamento), que foi definido como position: relative;.
top: 0; e left: 0;: Posiciona o pseudo-elemento no canto superior esquerdo da .barraCarregamento.
width: 0;: Define a largura inicial do pseudo-elemento como zero. É daqui que a animação começa.
height: 100%;: O pseudo-elemento ocupa 100% da altura da .barraCarregamento.
background-color: black;: Define a cor do pseudo-elemento, que será a cor da barra de carregamento.
animation: carregar 6s linear forwards;: Aplica a animação carregar com duração de 6 segundos, velocidade linear (sem aceleração ou desaceleração) e a propriedade forwards que mantém o estilo do último quadro-chave da animação após a conclusão.


3. Definindo a animação carregar:
@keyframes carregar {
    to { width: 100%; }
}


@keyframes carregar: Define uma animação chamada carregar.
to { width: 100%; }: Equivalente a 100% { width: 100%; }. Define o estado final da animação: a largura do pseudo-elemento será 100% da largura da .barraCarregamento.



4. Centralizando a barra na tela
body{
    display: flex;
    justify-content: center;
    align-items: center; /* Centraliza verticalmente também */
    min-height: 100vh; /* Ocupa a altura total da janela */
}

display: flex;: Transforma o body em um container flexbox.
justify-content: center;: Centraliza o conteúdo horizontalmente dentro do body.
align-items: center;: Centraliza o conteúdo verticalmente dentro do body.
min-height: 100vh;: Garante que o body ocupe pelo menos 100% da altura da viewport (janela do navegador).

Em resumo, o código cria uma barra de carregamento visual simulando o preenchimento progressivo de uma barra. 
Ele usa um pseudo-elemento ::before que começa com largura zero e se expande até 100% da largura do seu 
elemento pai, .barraCarregamento, através da animação carregar. 
A propriedade overflow: hidden no elemento pai garante que apenas a parte "preenchida" da barra seja 
visível durante a animação.
